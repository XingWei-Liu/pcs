post:
  Username: Username
  Password: Password
  Login: Login
  NODES: NODES
  RESOURCES: RESOURCES
  PERMISSIONS: PERMISSIONS
  FENCE_DEVICES: FENCE DEVICES
  ACLS: ACLS
  CLUSTER_PROPERTIES: CLUSTER PROPERTIES
  MANAGE_CLUSTERS: MANAGE CLUSTERS
  Logout: Logout
  All: All
  Remove: Remove
  Add_Existing: Add Existing
  Destroy: Destroy
  Create_New: Create New
  INFORMATION_ABOUT_CLUSTERS: INFORMATION ABOUT CLUSTERS
  SACTVMDCI: Select a cluster to view more detailed cluster information
  NAME: NAME
  Cluster: Cluster
  Nodes: Nodes
  NODE: NODE
  STATUS: STATUS
  QUORUM: QUORUM
  Resources: Resources
  RESOURCE: RESOURCE
  No_resources: No_resources
  Fence_devices: FENCE-DEVICES
  Fence_device: FENCE-DEVICE
  No_fence_devices: No fence devices
  Add: Add
  Edit_Node: Edit Node
  Pacemaker_Maintanence: Pacemaker Maintanence
  Pacemaker_Connected: Pacemaker Connected
  Pacemaker_Standby: Pacemaker Standby
  Pacemaker_Not_Connected: Pacemaker Not Connected
  Corosync_Connected: Corosync Connected
  Corosync_Not_Connected: Corosync Not Connected
  Start: Start
  Stop: Stop
  Restart: Restart
  Unstandby: Unstandby
  Standby: Standby
  Unmaintenance: Unmaintenance
  Maintenance: Maintenance
  Configure_Fencing: Configure Fencing
  Manage: Manage
  Select_Cluster: Select Cluster
  Clusters: Clusters
  Cluster_Daemons: Cluster Daemons
  Running_Resources: Running Resources
  NONE: NONE
  Resource_Location_Preferences: Resource Location Preferences
  Node_Attributes: Node Attributes
  Attribute: Attribute
  Value: Value
  Remove: Remove
  Fence_Levels: Fence_Levels
  Level: Level
  Score: Score
  Node_ID: Node_ID
  Uptime: Uptime
  Utilization_Attribute: Utilization Attribute
  Node: Node
  Create_Group: Create Group
  Resource: Resource
  Fence_Device: Fence Device
  Edit: Edit
  NO_RESOURCES_IN_CLUSTER: NO RESOURCES IN CLUSTER
  NO_FENCE_DEVICE_IN_CLUSTER: NO FENCE DEVICE IN CLUSTER
  TYPE: TYPE
  CLUSTER_PROPERTIES: CLUSTER PROPERTIES
  Hide_advanced_settings: Hide advanced settings
  Show_advanced_settings: Show advanced settings
  Apply_Changes: Apply Changes
  Refresh: Refresh
  No_cluster_properties_available: No cluster properties available
  Edit_ACL_Role: Edit ACL Role
  ROLE: ROLE
  Role_Name: Role Name
  Role_Description: Role Description
  Permissions: Permissions
  Type: Type
  Read: Read
  Write: Write
  Deny: Deny
  Users_Assigned: Users Assigned
  User_Name: User Name
  Groups_Assigned: Groups Assigned
  Group: Group
  Optional_Arguments: Optional Arguments
  Cleanup: Cleanup 
  Enable: Enable
  Disable: Disable
  Unmanage: Unmanage
  Clone: Clone
  Unclone: Unclone
  Node_Rule: Node/Rule
  Resource_Ordering_Preferences : Resource Ordering Preferences
  Action: Action
  Before_After: Before/After
  NONE: NONE
  starts: starts
  promotes: promotes
  demotes: demotes
  stops: stops
  after: after
  before: before
  Resource_Ordering_Set_Preferences: Resource Ordering Set Preferences
  Preference_Name_Set_of_Resources: Preference Name/Set of Resources
  New_Set: New Set
  Set: Set
  Resource_Colocation_Preferences: Resource Colocation Preferences
  Together_Apart: Together/Apart
  Together: Together
  Apart: Apart
  Resource_Colocation_Set_Preferences: Resource Colocation Set Preferences
  Resource_Ticket_Preferences: Resource Ticket Preferences
  Ticket: Ticket
  Resource_Role: Resource Role
  Loss_Policy: Loss Policy
  Started: Started
  Stopped: Stopped
  Master: Master
  Slave: Slave
  fence: fence
  stop: stop
  demote: demote
  Resource_Ticket_Set_Preferences: Resource Ticket Set Preferences
  freeze1: freeze1
  Resource_Meta_Attributes: Resource Meta Attributes
  Meta_Attribute: Meta Attribute
  Value: Value
  Current_Location: Current Location
  Promotable_Clone: Promotable Clone
  Create_clone: Create clone
  Create_promotable: Create promotable
  Update_group: Update group
  Ungroup: Ungroup
  Class_Provider: Class/Provider
  Resource_Group: Resource Group
  Resource_ID: Resource ID
  Disabled: Disabled
  Utilization_Attributes: Utilization Attributes
  Edit_Resource: Edit Resource
  Fence_Device: Fence Device
  Enter_the_name_of_a_node_in_a_cluster_that_you_would_like_to_manage: Enter the name of a node in a cluster that you would like to manage
  Node_Name: Node Name
  Enter_the_names_of_the_nodes_you_would_like_to_use_to_create_a_cluster: Enter the names of the nodes you would like to use to create a cluster
  Cluster_Name: Clusetr Name
  More_nodes: More nodes...
  PERMISSIONS_FOR_CLUSTER: PERMISSIONS FOR CLUSTER
  Name: Name
  Please_specify_the_count_of_links_that_is_compatible_with_this_cluster: Please specify the count of links that is compatible with this cluster
  Node_Addresses: Node Addresses
  Start_the_Node: Start the Node
  Fence_Instance_Name: Fence Instance Name
  Bad_username_or_password: Bad username or password
  displaying: displaying
  all: all
  only_issues: only issues
  Running: Running
  not_Authorized: not Authorized
  Unknown: Unknown
  unknown: unknown
  issues: issues
  CLUSTER: CLUSTER
  Add_Fence_Device: Add Fence Device
  login_expired: Your session has expired. Log in again, please
  authenticate_required: Enter password for user 'hacluster' to authenticate nodes
  Authentication_failed: Authentication on some nodes failed.
  Use_custom_address_and_port: Use custom address(es) and port(s)
  Dialogue_custom_Node_Note: For each node you can specify an address and a port via which pcsd will communicate with the node. If an address is not specified the node's name will be used. If a port is not specified 2224 will be used.
  Group_Name: Group Name
  Change_order_of_resources: Change order of resources
  Create_Fence_Instance: Create Fence Instance
  Dialogue_remove_cluster: Are you sure you want to remove the following cluster(s) from the GUI? (This only removes the cluster from the GUI, it does not stop the cluster from running.)
  Dialogue_destroy_cluster: Are you sure you want to destroy the following cluster?
  Link: Link
  Addresses: Addresses
  Options: Options
  Port: Port
  Ping_Interval: Ping_Interval
  Ping_Presion: Ping_Presion
  Ping_Timeout: Ping_Timeout
  Ping_Count: Ping_Count
  Transport: Transport
  SBD_service_status: SBD service status
  INSTALLED: INSTALLED
  ENABLED: ENABLED
  RUNNING: RUNNING
  Create_Resource: Create Resource
  Addresses_and_Links: Addresses and Links
  Add_link: Add link
  Quorum: Quorom
  Totem: Totem
  Link_Priority: Link Priority
  Ping_Precision: Ping Precision
  Pong_Count: Pong Count
  Transport_options: Transport options
  IP_Version: IP Version
  PMTUd_Interval: PMTUD Interval
  Link_Mode: Link Mode
  Compression_options: Compression options
  Model: Model
  Threshold: Threshold
  bytes: bytes
  Crypto_options: Crypto options
  Hash: Hash
  Cipher: Cipher
  Default: Default
  IPv4_if_available_IPv6_otherwise: IPv4 if available IPv6 otherwise
  IPv6_if_available_IPv4_otherwise: IPv6 if available IPv4 otherwise
  passive: passive
  active: active
  round_robin: round robin
  Auto_Tie_Breaker: Auto Tie Breaker
  Last_Man_Standing: Last Man Standing
  Last_Man_Standing_Window: Last Man Standing Window
  Wait_for_All: Wait for all
  turn_on: turn on
  turn_off: turn off
  Consensus_Timeout: Consensus Timeout
  Downcheck_Timeout: Downcheck Timeout
  Fail_Receive_Constant: Fail Receive Constant
  Heartbeat_Failures_Allowed: Heartbeat Failures Allowed
  Hold_Timeout: Hold Timeout
  Join_Timeout: Join Timeout 
  Max_Messages: Max Messages
  Max_Network_Delay: Max Network Delay
  Merge_Timeout: Merge Timeout
  Miss_Count_Constant: Miss Count Constant
  Send_Join_Timeout: Send Join Timeout
  Seqno_Unchanged_Constant: Seqno Unchanged Constant
  Token_Timeout: Token Timeout
  Token_Coefficient: Token Coefficient
  Token_Retransmit_Timeout: Token Retransmit Timeout
  Token_Retransmits_Before_Loss_Constant: Token Retransmits Before Loss Constant
  Window_Size: Window Size
  Are_you_sure_you_want_to_remove_the_following_nodes: Are you sure you want to remove the following nodes
  Are_you_sure_you_want_to_remove_the_following_resources: Are you sure you want to remove the following resources
  Are_you_sure_you_want_to_remove_the_following_ACL_roles: Are you sure you want to remove the following ACL roles
  Enforce_removal: Enforce removal
  Specify_watchdog_devices_for_nodes: Specify watchdog devices for nodes
  SBD_options: SBD options
  SBD_DELAY_START: SBD DELAY START
  SBD_STARTMODE: SBD STARTMODE
  SBD_WATCHDOG_TIMEOUT: SBD WATCHDOG TIMEOUT
  ignore_offline_nodes: ignore offline nodes
  Are_you_sure_you_want_to_disable_SBD: Are you sure you want to disable SBD
  SBD_configuration: SBD configuration
  SBD_watchdogs: SBD watchdogs
  WATCHDOG: WATCHDOG
  add_same_cluster: The cluster name %1 has already been added. You may not add two clusters with the same name.
  add_same_node: The node %1 is already a part of the %2 cluster. You may not add a node to two different clusters.
  Please_repeat_the_last_action_if_appropriate: Please repeat the last action if appropriate
  Configuaration_conflict_detected: Configuration conflict detected.Some nodes had a newer configuration than the local node. Local node's configuration was updated.%1.
  Unabled_to_save_settings: Unable to save settings on local cluster node(s) %1. Make sure pcsd is running on the nodes and the nodes are authorized.
  Errors: Errors
  Totem_consensus: This timeout specifies in milliseconds how long to wait for consensus to be achieved before starting a new round of membership configuration. The minimum value for consensus must be 1.2 * token. This value will be automatically calculated at 1.2 * token if the user doesn't specify a consensus value.<br/><br/>For two node clusters, a consensus larger than the join timeout but less than token is safe. For three node or larger clusters, consensus should be larger than token. There is an increasing risk of odd membership changes, which still guarantee virtual synchrony, as node count grows if consensus is less than token.<br/><br/>The default is 1200 milliseconds.
  Knet_link_priority: Specifies the priority for the link when knet is used in 'passive' mode.
  Knet_ping_interval: Specifies the interval between knet link pings.Ping Interval and Ping Timeout are a pair, if one is specified the other should be too, otherwise one will be calculated from the token timeout and one will be taken from the config file.<br/><br/>Default:Token Timeout / (Pong Count * 2)
  Knet_ping_precision: How many values of latency are used to calculate the average link latency.<br/><br/>Default:2048 samples 
  Knet_ping_timeout: If no ping is received within this time, the knet link is declared dead.Ping Interval and Ping Timeout are a pair, if one is specified the other should be too, otherwise one will be calculated from the token timeout and one will be taken from the config file.
  Knet_pong_count: How many valid ping/pongs before a link is marked UP.<br/><br/>Default:5
  Knet_transport: Which IP transport knet should use.<br/><br/>Default:udp
  Knet_mcastport: Port number to be used for communication. The default remains the old one of 5405 + linknumber, but you can override it per link here.
  Knet_compression_model: The (optional) type of compression used by knet. The values available depend on the build and also available libraries. Typically zlib and lz4 will be available but bzip2 and others could also be allowed.<br/><br/>Default:none
  Knet_compression_threshold: Tells knet to NOT compress any packets that are smaller than the value indicated. Set to 0 to reset to the default. Set to 1 to compress everything.<br/><br/>Default:100 bytes
  Knet_compression_level: Many compression libraries allow tuning of compression parameters.For example 0 or 1 ... 9 are commonly used to determine the level of compression. This value is passed unmodified to the compression library so it is recommended to consult the library's documentation for more detailed information.
  Knet_crypto_model: This specifies which cryptographic library should be used by knet.<br/><br/>Default:nss
  Knet_crypto_hash: This specifies which HMAC authentication should be used to authenticate all messages.<br/><br/>Default:sha256
  Knet_crypto_cipher: This specifies which cipher should be used to encrypt all messages. Enabling Cipher requires also enabling of Hash.<br/><br/>Default:aes256
  Knet_pmtud_interval: How often the knet PMTUd runs to look for network MTU changes.Value inseconds.<br/><br/>Default:60s
  Knet_link_mode: This specifies the knet mode.<br/><br/>passive:The active link with the lowest priority will be used.If one or more links share the same priority the one with the lowest link ID will be used.<br/><br/>active:All active links will be used simultaneously to send traffic, link priority is ignored.<br/><br/>round-robin:Each packet will be sent to the next active link in order.<br/><br/>If only one interface directive is specified, passive is automatically chosen.
  quorum_auto_tie_breaker: "Enables Auto Tie Breaker (ATB) feature (default: off).<br/><br/>The general behaviour of votequorum allows a simultaneous node failure up to 50%-1 node, assuming each node has 1 vote.<br/><br/>When ATB is enabled, the cluster can suffer up to 50% of the nodes failing at the same time, in a deterministic fashion.The cluster partition,or the set of nodes that are still in contact with the node that has the lowest nodeid will remain quorate. The other nodes will be inquorate."
  quorum_last_man_standing: "Enables Last Man Standing (LMS) feature (default: off). <br/><br/>The general behaviour of votequorum is to set Expected Votes and Quorum at startup and use those values during the whole lifetime of the cluster.<br/><br/>Using for example an 8 node cluster where each node has 1 vote, Expected Votes is set to 8 and Quorum to 5. This condition allows a total failure of 3 nodes. If a 4th node fails, the cluster becomes inquorate and it will stop providing services.<br/><br/>Enabling LMS allows the cluster to dynamically recalculate Expected Votes and Quorum under specific circumstances. It is essential to enable WFA when using LMS in High Availability clusters.<br/><br/>Using the above 8 node cluster example, with LMS enabled the cluster can retain quorum and continue operating by losing, in a cascade fashion, up to 6 nodeswith only 2 remaining active."
  quorum_last_man_standing_window: "Tunes Last Man Standing Window (default: 10000 ms)<br/><br/>The window of time between when a node (or group of nodes die) and quorum is recalculated if the Last Man Standing option is enabled."
  quorum_wait_for_all: "Enables Wait For All (WFA) feature (default: off).<br/><br/>The general behaviour of votequorum is to switch a cluster from inquorate to quorate as soon as possible. For example, in an 8 node cluster, where every node has 1 vote, Expected Votes is set to 8 and Quorum is (50% + 1) 5. As soon as 5 (or more) nodes are visible to each other, the partition of 5 (or more) becomes quorate and can start operating.<br/><br/>When WFA is enabled, the cluster will be quorate for the first time only after all nodes have been visible at least once at the same time.
<br/><br/>This feature has the advantage of avoiding some startup race conditions, with the cost that all nodes need to be up at the same time at least once before the cluster can operate.<br/><br/>A common startup race condition based on the above example is that as soon as 5 nodes become quorate, with the other 3 still offline, the remaining 3 nodes will be fenced.
<br/><br/>It is very useful when combined with Last Man Standing."
  totem_downcheck: "This timeout specifies in milliseconds how long to wait before checking that a network interface is back up after it has been downed.<br/><br/>The default is 1000 milliseconds."
  totem_fail_recv_const: "This constant specifies how many rotations of the token without receiving any of the messages when messages should be received may occur before a new configuration is formed.<br/><br/>The default is 2500 failures to receive a message."
  totem_heartbeat_failures_allowed: "[HeartBeating  mechanism] Configures the optional HeartBeating mechanism for faster failure detection. Keep in mind that engaging this mechanism in lossy networks could cause faulty loss declaration as the mechanism relies on the network for heartbeating.<br/><br/>So as a rule of thumb use this mechanism if you require improved failure in low to medium utilized networks.<br/><br/>This constant specifies the number of heartbeat failures the system should tolerate before declaring heartbeat failure e.g 3. Also if this value is not set or is 0 then the heartbeat mechanism is not engaged in the system and token rotation is the method of failure detection.<br/><br/>The default is 0 (disabled)."
  totem_hold: "This timeout specifies in milliseconds how long the token should be held by there presentative when  the  protocol  is under low utilization. It is not recommended to alter this value without guidance from the corosync community.<br/><br/>The default is 180 milliseconds."
  totem_join: "This timeout specifies in milliseconds how long to wait for join messages in the membership protocol.<br/><br/>The default is 50 milliseconds."
  totem_max_messages: "This constant specifies the maximum number of messages that may be sent by one processor on receipt of the token. The max_messages parameter is limited to 256000 / netmtu to prevent overflow of the kernel transmit buffers.<br/><br/>The default is 17 messages."
  totem_max_network_delay: "[HeartBeating mechanism] This constant specifies in milliseconds the approximate delay that your network takes to transport one packet from one machine to another. This value is to be set by system engineers and please don't change if not sure as this effects the failure detection mechanism using heartbeat.<br/><br/>The default is 50 milliseconds"
  totem_merge : "This timeout specifies in milliseconds how long to wait before checking for a partition when no multicast traffic is being sent. If multicast traffic is being sent, the merge detection happens automatically as a function of the protocol.<br/><br/>The default is 200 milliseconds."
  totem_miss_count_const: "This constant defines the maximum number of times on receipt of a token a message is checked for retransmission before a retransmission occurs. This parameter is useful to modify for switches that delay multicast packets compared to unicast packets. The default setting works well for nearly all modern switches.<br/><br/>The default is 5 messages."
  totem_send_join: "This timeout specifies in milliseconds an upper range between 0 and send_join to wait before sending a join message. For configurations with less than 32 nodes, this parameter is not necessary. For larger rings, this parameter is necessary to ensure the NIC is not overflowed with join messages on formation of a new ring. A reasonable value for large rings (128 nodes) would be 80msec. Other timer values must also change if this value is changed. Seek advice from the corosync mailing list if trying to run larger configurations.<br/><br/>The default is 0 milliseconds."
  totem_seqno_unchanged_const: "This constant specifies how many rotations of the token without any multicast traffic should occur before the hold timer is started.<br/><br/>The default is 30 rotations."
  totem_token: "This timeout is used directly or as a base for real token timeout calculation (explained in token_coefficient section). Token timeout specifies in milliseconds until a token loss is declared after not receiving a token. This is the time spent detecting a failure of a processor in the current configuration. Reforming a new configuration takes about 50 milliseconds in addition to this timeout.<br/><br/>For real token timeout used by totem it's possible to read cmap value of runtime.config.token key.<br/><br/>The default is 1000 milliseconds."
  totem_token_coefficient: "This value is used only when nodelist section is specified and contains at least 3 nodes.If so, real token timeout is then computed as token + (number_of_nodes- 2) *token_coefficient.This allows cluster to scale without manually changing token timeout every time new node is added.This value can be set to 0 resulting in effective removal of this feature.<br/><br/>The default is 650 milliseconds."
  totem_token_retransmit: "This timeout specifies in milliseconds after how long before receiving a token the token is retransmitted. This will be automatically calculated if token is modified. It is not recommended to alter this value without guidance from the corosync community.<br/><br/>The default is 238 milliseconds"
  totem_token_retransmits_before_loss_const: "This value identifies how many token retransmits should be attempted before forming a new configuration. If this value is set, retransmit and hold will be automatically calculated from retransmits_before_loss and token.<br/><br/>The default is 4 retransmissions."
  totem_window_size: "This constant specifies the maximum number of messages that may be sent on one token rotation. If all processors perform equally well, this value could be large (300), which would introduce higher latency from origination to delivery for very large rings. To reduce latency in large rings(16+), the defaults are a safe compromise. If 1 or more slow processor(s) are present among fast processors, window_size should be no larger than 256000 / netmtu to avoid overflow of the kernel receive buffers. The user is notified of this by the display of a retransmit list in the notification logs. There is no loss of data,but performance is reduced when these errors occur.<br/><br/>The default is 50 messages."
